# CircleCI configuration file to build, lint, test & deploy.

## The default images and working directory.
defaults: &defaults
  docker:
    - image: specbee/drupalci:9.1-php7.4-apache
  working_directory: /app

## The cache restoring mechanism.
restore_composer_cache: &restore_composer_cache
  keys:
  - composer-v2-{{ checksum "composer.lock" }}
  - composer-v2-

## The cache saving mechanism.
save_composer_cache: &save_composer_cache
  paths:
    - ./vendor
    - ./docroot/core
    - ./docroot/modules/contrib
    - ./docroot/libraries
    - ./docroot/themes/contrib
  key: composer-v2-{{ checksum "composer.lock" }}

## Branch filter for PR.
ignore_branches: &ignore_branches
  filters:
    branches:
      ignore:
        - develop
        - master

## Deploy mechanism.
## The variables `SSH_USER` & `SSH_HOST` should be set in the CircleCI project settings.
## https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
deploy: &deploy
  name: Deploy Over SSH
  command: |
    set -e
    ssh -oStrictHostKeyChecking=no $SSH_USER@$SSH_HOST 'bash -s' < .circleci/deploy.sh

## Jobs.
version: 2
jobs:
  install:dependencies: # Install the composer dependencies & build the frontend assets.
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_composer_cache
      - run:
          name: Install composer dependencies
          command: composer install
      - save_cache: *save_composer_cache
      - run:
          name: Build frontend requirements
          command: robo build:theme
  test:static:analysis: # Run validations. Validates composers, PHPCS, and theme lint.
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_composer_cache
      - run:
          name: Validate composer.json & lock files.
          command: robo validate
      - save_cache: *save_composer_cache
  test:run:behat: # Run Behat tests.
    docker:
    - image: specbee/drupalci:9.1-php7.4-apache
    - image: mariadb:10.3
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
    working_directory: /app
    steps:
      - checkout
      - restore_cache: *restore_composer_cache
      - run:
          name: Install Drupal
          command: robo setup -n --db-url=mysql://root@127.0.0.1/drupal
      - run:
          name: Restart apache service
          command: service apache2 restart
      - run:
          name: Run Behat tests
          command: robo test:behat
      - save_cache: *save_composer_cache
  deploy:dev: # Deploy to the dev environment.
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          <<: *deploy
  deploy:uat: # Deploy to Stage environmentm
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          <<: *deploy

## Workflow that runs all of our jobs in parallel.
workflows:
  version: 2
  build:
    jobs:
      - install:dependencies:
          <<: *ignore_branches
      - test:static:analysis:
          <<: *ignore_branches
          requires:
            - install:dependencies
      - test:run:behat:
          <<: *ignore_branches
          requires:
            - test:static:analysis
  deploy:
    jobs:
      - deploy:dev:
          filters:
            branches:
              only:
                - develop
      - deploy:uat:
          filters:
            branches:
              only:
                - master
